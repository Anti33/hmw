board = [[0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]]

total = []
for i in range(len(board)):
  for j in range(len(board)):
    total.append(board[i][j])
total_nums = 0
for num in total:
  total_nums += num

def clean_print():
  for i in range(len(board)):
    print(board[i])
#Check if that box is already full or not, else print try a a different location
def num_placement(location):
  if location <= 4:
    board[0][location-1] = 2
    clean_print()
  elif location > 4 and location < 9:
    board[1][location-5] = 2
    clean_print()
  elif location >= 9 and location <= 12:
    board[2][location-9] = 2
    clean_print()
  elif location > 12 and location < 17:
    board[3][location-13] = 2
    clean_print()
  else:
    print("\n~~~Number doesnt fit in the range, try again!~~~\n")



def direction_refresh(direction):
  if direction == "d":
    for j in range(4):
      if board[0][j] == board[1][j]:
        board[0][j] = 0
        board[1][j] = board[1][j] ** 2
      elif board[0][j] > 0 and board[1][j] == 0:
        board[1][j] = board[0][j]
        board[0][j] = 0
      elif board[2][j] == board[3][j]:
        board[2][j] = 0
        board[3][j] = board[3][j] ** 2
      elif board[2][j] > 0 and board[3][j] == 0:
        board[3][j] = board[2][j]
        board[2][j] = 0
  elif direction == "u":
    for j in range(4):
      if board[3][j] == board[2][j]:
        board[3][j] = 0
        board[2][j] = board[2][j] ** 2
      elif board[3][j] > 0 and board[2][j] == 0:
        board[2][j] = board[3][j]
        board[3][j] = 0
      elif board[1][j] == board[0][j]:
        board[1][j] = 0
        board[0][j] = board[0][j] ** 2
      elif board[1][j] > 0 and board[0][j] == 0:
        board[0][j] = board[1][j]
        board[1][j] = 0
  elif direction == "r":
    for j in range(4):
      if board[j][0] == board[j][1]:
        board[j][0] = 0
        board[j][1] = board[j][1] ** 2
      elif board[j][0] > 0 and board[j][1] == 0:
        board[j][1] = board[j][0]
        board[j][0] = 0
      if board[j][2] == board[j][3]:
        board[j][2] = 0
        board[j][3] = board[j][3] ** 2
      elif board[j][2] > 0 and board[j][3] == 0:
        board[j][2] = board[j][3]
        board[j][2] = 0



  else:
    return()



while True:
  location = int(input("Enter the location to place the number 2: "))
  num_placement(location)
  direction = input("\nEnter the direction to swipe (Down, up, Right, Left): ")
  num_placement(location)
  if direction.lower() == "d" or "down":
    direction_refresh("d")
  if direction.lower() == "u" or "up":
    direction_refresh("u")
  if direction.lower() == "r" or "right":
    direction_refresh("r")
  if direction.lower() == "l" or "left":
    direction_refresh("l")
